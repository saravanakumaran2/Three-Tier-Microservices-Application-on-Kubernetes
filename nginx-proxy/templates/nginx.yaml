---
# Namespace for ingress-nginx
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx

---
# Service Account for ingress-nginx-controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
automountServiceAccountToken: true

---
# ClusterRole for ingress-nginx-controller with required permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-nginx
rules:
  - apiGroups: [""]
    resources: ["configmaps", "endpoints", "nodes", "pods", "secrets", "services"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingressclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

---
# ClusterRoleBinding for ingress-nginx-controller binding ServiceAccount to ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
  - kind: ServiceAccount
    name: ingress-nginx-controller
    namespace: ingress-nginx

---
# Deployment for ingress-nginx-controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: ingress-nginx-controller
      containers:
        - name: controller
          image: k8s.gcr.io/ingress-nginx/controller:v1.10.1
          args:
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
            - --election-id=ingress-controller-leader
            - --controller-class=k8s.io/ingress-nginx
            - --ingress-class=nginx
            - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443

---
# Service for ingress-nginx-controller
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30080
    - name: https
      port: 443
      targetPort: 443
      nodePort: 30443

---
# Temporary ClusterRoleBinding for testing permissions
# WARNING: This grants cluster-admin to ingress-nginx-controller ServiceAccount!
# Remove this after testing and fix RBAC properly
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx-controller-admin
subjects:
  - kind: ServiceAccount
    name: ingress-nginx-controller
    namespace: ingress-nginx
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

# === Now below is the nginx-proxy app resources with proper Helm templating syntax ===

apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.nginx.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nginx.name }}
  namespace: {{ .Values.nginx.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.nginx.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.nginx.name }}
    spec:
      containers:
        - name: {{ .Values.nginx.name }}
          image: {{ .Values.nginx.image }}
          ports:
            - containerPort: {{ .Values.nginx.service.targetPort }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nginx.name }}
  namespace: {{ .Values.nginx.namespace }}
spec:
  selector:
    app: {{ .Values.nginx.name }}
  type: {{ .Values.nginx.service.type }}
  ports:
    - protocol: TCP
      port: {{ .Values.nginx.service.port }}
      targetPort: {{ .Values.nginx.service.targetPort }}
      nodePort: {{ .Values.nginx.service.nodePort }}
