apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  namespace: {{ .Values.backend.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
    spec:
      containers:
        - name: {{ .Values.backend.name }}
          image: {{ .Values.backend.image }}
          ports:
            - containerPort: {{ .Values.backend.service.targetPort }}
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.secret.name }}
                  key: {{ .Values.backend.secret.user.key }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.secret.name }}
                  key: {{ .Values.backend.secret.password.key }}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.secret.name }}
                  key: {{ .Values.backend.secret.database.key }}
            - name: MYSQL_HOST
              value: {{ .Values.backend.env.mysqlHost }}



---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.backend.service.name }}
  namespace: {{ .Values.backend.namespace }}
spec:
  selector:
    app: {{ .Values.backend.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.backend.service.port }}
      targetPort: {{ .Values.backend.service.targetPort }}
  type: {{ .Values.backend.service.type }}



---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.backend.secret.name }}
  namespace: {{ .Values.backend.namespace }}
type: Opaque
data:
  user: "{{ .Values.mysql.secret.values.user }}"
  password: "{{ .Values.mysql.secret.values.password }}"
  database: "{{ .Values.mysql.secret.values.database }}"
